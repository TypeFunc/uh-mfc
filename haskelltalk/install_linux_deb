echo "This script may take a long time. ~(2 hrs...)"

##Need to create symlink on ubuntu 16.04 and 16.10 to workaround a bug when installing haskelline
#sudo ln -s /lib/x86_64-linux-gnu/libtinfo.so.5 /lib/x86_64-linux-gnu/libtinfo.so
sudo apt-get --yes install libtinfo-dev

echo "Installing git version control"
# Tidalcycles and exference require git
sudo apt-get --yes install git

echo "Installing stack, the haskell build tool & curated subset of the hackage.org software repository"
./getstack
echo "Appending ~/.local/bin to your PATH environment variable in ~/.bashrc"
echo "$(cat ~/.bashrc)"$'\n'"export PATH=~/.local/bin:$PATH" >> ~/.bashrc
echo "Appending /usr/local/lib to your LD_LIBRARY_PATH environment variable in ~/.bashrc"
echo "$(cat ~/.bashrc)"$'\n'"export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH" >> ~/.bashrc
source ~/.bashrc
echo "Installing GHC, the Glorious Haskell Compiler"
stack setup
echo "Installing cabal build tool"
stack install cabal-install
#stack exec -- cabal install world
#mv .cabalconfig ~/.cabal/config
echo "Installing intero development tool"
stack install intero
#echo "Installing hoogle documentation"
#stack install hoogle
#stack exec -- hoogle generate all
#echo "Installing hlint code style suggestions"
#stack install hlint

echo "Installing emacs text editor"
sudo apt-get --yes  install emacs
echo "moving ~/.emacs to ~/.emacsbackup"
mv ~/.emacs ~/.emacsbackup
echo "copying dotemacs to ~/.emacs"                                                     
cp dotemacs ~/.emacs

echo "Downloading atom text editor"
wget -nc https://atom.io/download/deb
mv deb atom-amd64.deb
echo "Installing atom text editor"
sudo dpkg --install atom-amd64.deb

#Some of the haskell libraries require native dependencies which stack does not install,
#so we need to use the system package manager.  This works on ubuntu linux, but if you are
#on windows or OSX you will need to install some other way.

echo "Installing fftw" # Needed for supercollider plugins and accelerate
sudo apt-get --yes install libfftw3-dev

echo "Installing cmake" # Needed for installing from source (llvm requires version 3)
sudo apt-get --yes install cmake

sudo apt-get --yes install libudev-dev libsndfile1-dev libx11-dev libxt-dev
# Note: There is also libjack-dev and libjack-0 but they only contain one backend
# and are incompatible with this version which contains two backends
sudo apt-get --yes install jackd libjack-jackd2-dev libjack-jackd2-0
# Install qt5 development packages
sudo apt-get --yes install qtbase5-dev libqt5webkit5-dev libqt5sensors5-dev qtpositioning5-dev qttools5-dev-tools
# Note: Install supercollider from source because the version in the ubuntu repos is missing many plugins
./install_supercollider

sudo apt-get --yes install csound #csound-gui

echo "Installing LaTeX for HaTeX"
sudo apt-get --yes install texlive

#echo "Installing python3 for Matplotlib"
#sudo apt-get --yes install -y python3-pip python3-matplotlib python3-numpy python-mpltoolkits.basemap

echo "Installing gnuplot"
sudo apt-get --yes install gnuplot

# The following five pairs of lines are needed for the plot library
echo "Installing cairo vector graphics"
sudo apt-get --yes install libcairo2-dev

# The following two pairs of lines are needed for the hmatrix library
echo "Installing blas and lapack linear algebra"
sudo apt-get --yes install libblas-dev liblapack-dev

echo "Installing gsl Gnu Scientific Library"
sudo apt-get --yes install libgsl-dev

echo "Installing pango"
sudo apt-get --yes install libpango1.0-dev

echo "Installing gtk and gtk3"
sudo apt-get --yes install libgtk2.0-dev libgtk-3-dev

# The following pairs of lines are needed for the accelerate library
echo "Installing GL, GLU, GLUT, and llvm-4.0 for accelerate"
sudo apt-get --yes install libgl1-mesa-dev libglu1-mesa-dev freeglut3
sudo add-apt-repository ppa:ubuntu-x-swat/updates -y
sudo apt-get update
sudo apt-get --yes install llvm-4.0-dev libffi-dev
# Must remove llvm 3.8 or else it will try to link to both 3.8 and 4.0 at runtime and segfault
sudo apt-get --yes remove libllvm3.8

# The accelerate-cuda backend is currently broken and deprecated
#echo "Installing nvidia cuda"
#sudo apt-get --yes install linux-headers-$(uname -r)
#wget -nc http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.61-1_amd64.deb
#sudo dpkg -i cuda-repo-ubuntu1604_8.0.61-1_amd64.deb
#sudo apt-get update
#sudo apt-get --yes install cuda

echo "Installing the z3 and picosat theorem provers"
sudo apt-get --yes install z3 picosat

echo "Building. The first time you do a full build may take a long time ~(2 hrs...)"
stack build

echo "Finished!"

# If your install goes bad, you can just
# rm -rf ~/.stack ~/.emacs.d ~/uh-mfc/haskelltalk/.stack-work
# and then reinstall
